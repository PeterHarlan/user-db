{"version":3,"sources":["components/UserProfile.js","components/TableFilters.js","components/UserTableWrapper.js","components/LargeMessageWrapper.js","components/Error.js","components/Loading.js","components/LoadingContent.js","App.js","reportWebVitals.js","index.js"],"names":["DescribeText","styled","div","InfoText","UserProfile","user","imageLocation","picture","large","useState","selectedInfo","setSelectedInfo","className","Image","src","alt","Container","fluid","Row","Col","email","dob","date","cell","icon","faEnvelope","size","onMouseEnter","faCalendar","faPhone","TableFilters","fnPeopleFilter","filterTag","placeHolder","Form","onSubmit","e","preventDefault","Control","onChange","placeholder","TableContainer","PaginationContainer","UserTable","originalPeopleList","fnSetUser","pageIndex","setPageIndex","activePeopleList","setActivePeopleList","firstName","lastName","filterMap","setfilterMap","useEffect","filterFunctionMap","person","targeName","name","title","first","generateFirstName","toLowerCase","includes","last","street","targetStreet","location","number","generateStreet","toLocaleLowerCase","peopleList","Object","entries","forEach","key","value","fnFilter","filter","people","length","fnUpdatePage","newIndex","pageIndexes","i","push","Pagination","Item","active","onClick","TableBody","colSpan","slice","map","index","personIndex","login","uuid","city","state","country","postcode","peopleFilter","event","filterId","searchTarget","target","prev","Table","striped","bordered","hover","responsive","LargeMessageWrapper","children","Error","error","faExclamationTriangle","Loading","faSpinner","spin","LoadingContent","isLoading","App","setIsLoading","setError","setPeopleList","focusedUserUUID","setFocusedUserUUID","focusedUser","setFocusedUser","axios","get","then","data","results","selectedUserUUID","catch","selectedUser","find","xs","md","lg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAWMA,EAAeC,IAAOC,IAAV,kDAIZC,EAAWF,IAAOC,IAAV,kDAIC,SAASE,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAC9BC,EAAiBD,GAAQA,EAAKE,SAAWF,EAAKE,QAAQC,OAAU,GAEtE,EAAwCC,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACE,qBAAKC,UAAU,oBAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,cAACC,EAAA,EAAD,CACED,UAAU,qBACVE,IAAKR,EACLS,IAAI,2CAGN,eAACC,EAAA,EAAD,CAAWJ,UAAU,mBAAmBK,OAAK,EAA7C,UACE,cAACC,EAAA,EAAD,CAAKN,UAA4B,SAAjBF,EAA0B,GAAK,SAA/C,SACE,eAACS,EAAA,EAAD,CAAKP,UAAU,OAAf,UACE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACnB,EAAD,8BAGJ,cAACkB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAChB,EAAD,UAAWE,EAAKe,iBAKxB,cAACF,EAAA,EAAD,CAAKN,UAA4B,SAAjBF,EAA0B,GAAK,SAA/C,SACE,eAACS,EAAA,EAAD,CAAKP,UAAU,OAAf,UACE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACnB,EAAD,8BAGJ,cAACkB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAChB,EAAD,UAAWE,EAAKgB,IAAIC,gBAK5B,cAACJ,EAAA,EAAD,CAAKN,UAA4B,UAAjBF,EAA2B,GAAK,SAAhD,SACE,eAACS,EAAA,EAAD,CAAKP,UAAU,OAAf,UACE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACnB,EAAD,+BAGJ,cAACkB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAChB,EAAD,UAAWE,EAAKkB,gBAKxB,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CACEK,KAAMC,IACNC,KAAK,KACLC,aAAc,kBAAMhB,EAAgB,aAGxC,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,CACEK,KAAMI,IACNF,KAAK,KACLC,aAAc,kBAAMhB,EAAgB,aAGxC,cAACQ,EAAA,EAAD,UACE,cAAC,IAAD,CACEK,KAAMK,IACNH,KAAK,KACLC,aAAc,kBAAMhB,EAAgB,yB,wDC5FrC,SAASmB,EAAT,GAIX,IAHFC,EAGC,EAHDA,eACAC,EAEC,EAFDA,UACAC,EACC,EADDA,YAEA,OACE,cAACC,EAAA,EAAD,CAAMC,SAAU,SAACC,GAAD,OAAOA,EAAEC,kBAAzB,SACE,cAACH,EAAA,EAAKI,QAAN,CACEC,SAAU,SAACH,GAAD,OAAOL,EAAeK,EAAGJ,IACnCQ,YAAaP,MCPrB,IACMQ,EAAiBxC,IAAOC,IAAV,sGAMdwC,EAAsBzC,IAAOC,IAAV,6CAIV,SAASyC,EAAT,GAAuD,IAAlCC,EAAiC,EAAjCA,mBAAoBC,EAAa,EAAbA,UACtD,EAAkCpC,mBAAS,GAA3C,mBAAOqC,EAAP,KAAkBC,EAAlB,KACA,EAAgDtC,mBAAS,IAAzD,mBAAOuC,EAAP,KAAyBC,EAAzB,KACA,EAAkCxC,mBAAS,CACzCyC,UAAW,GACXC,SAAU,KAFZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAKAC,qBAAU,WACRL,EAAoB,YAAIL,MACvB,CAACA,IAEJU,qBAAU,WAER,IA4BMC,EAAoB,CACxBL,UA7BsB,SAACM,EAAQC,GAC/B,MAAyBD,EAAOE,MAAQ,GAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAEf,QADkBC,EAAkBF,EAAOC,GAC7BE,cAAcC,SAASN,EAAUK,gBACtCN,GA0BTL,SApBqB,SAACK,EAAQC,GAE9B,SADiBD,EAAOE,MAAQ,IAAxBM,KACCF,cAAcC,SAASN,EAAUK,gBACjCN,GAkBTS,OAbmB,SAACT,EAAQU,GAC5B,MAAyBV,EAAOW,SAASF,QAAU,GAA3CG,EAAR,EAAQA,OAAQV,EAAhB,EAAgBA,KAEhB,QADmBW,EAAeD,EAAQV,GAC3BY,oBAAoBP,SAASG,EAAaJ,gBAChDN,IAaPe,EAAa3B,EAEjB4B,OAAOC,QAAQrB,GAAWsB,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAC5CC,EAAWtB,EAAkBoB,GACnCJ,EAAaA,EAAWO,QAAO,SAACC,GAAD,OAAYF,EAASE,EAAQH,SAI1DL,EAAWS,OApED,IAqEZC,EAAa,GAIfhC,EAAoB,YAAIsB,MACvB,CAACnB,EAAWR,IAOf,IALA,IAAMqC,EAAe,SAACC,GACpBnC,EAAamC,IAGXC,EAAc,GArEiD,WAsE1DC,GACPD,EAAYE,KACV,cAACC,EAAA,EAAWC,KAAZ,CAEEC,OAAQJ,IAAMtC,EACd2C,QAAS,kBAAMR,EAAaG,IAH9B,SAKGA,EAAI,GAJAA,KAHFA,EAAI,EAAGA,EAAIpC,EAAiBgC,OAjFrB,GAiFyCI,IAAM,EAAtDA,GAYT,IAIMvB,EAAoB,SAACF,EAAOC,GAChC,OAAOD,EAAK,UAAMA,EAAN,aAAgBC,GAAUA,GAGlCS,EAAiB,SAACD,EAAQV,GAC9B,MAAM,GAAN,OAAUU,EAAV,YAAoBV,IAGhBgC,EAAY,SAAC,GAAoB,IAAlBnB,EAAiB,EAAjBA,WAEnB,OAAIA,EAAWS,QAAU,EAErB,6BACE,oBAAIW,QAAQ,IAAZ,6BAKCpB,EACJqB,MApHW,GAoHL9C,EApHK,IAoHmBA,EAAY,IAC1C+C,KAAI,SAACrC,EAAQsC,GACZ,IAzBqBC,EAyBfpB,EAAMnB,EAAOwC,MAAMC,KACzB,EAA+BzC,EAAOE,MAAQ,GAAtCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOI,EAAtB,EAAsBA,KACtB,EAA2CR,EAAOW,UAAY,GAAtD+B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,SAC9B,EAAyB7C,EAAOW,SAASF,QAAU,GAA3CG,EAAR,EAAQA,OAAQV,EAAhB,EAAgBA,KAChB,OACE,qBAEE/B,aAAc,WACZkB,EAAU8B,IAHd,UAME,8BApCiBoB,EAoCMD,EAnCxBC,EA9FO,GA8FOjD,EAAwB,KAoCrC,6BAAKe,EAAkBF,EAAOC,KAC9B,6BAAKI,IACL,6BAAKK,EAAeD,EAAQV,KAC5B,6BAAKwC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MAZA1B,OAkBT2B,EAAe,SAACC,EAAOC,GAC3BD,EAAMlE,iBAEN,IAAMoE,EAAeF,EAAMG,OAAO9B,MAClCvB,GAAa,SAACsD,GACZ,OAAO,2BAAKA,GAAZ,kBAAmBH,EAAWC,QAIlC,OACE,qCACE,eAAChE,EAAD,WACE,oBAAI7B,UAAU,YAAd,mBACA,eAACgG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAxC,UACE,gCACE,+BACE,mCACA,6BACE,cAAClF,EAAD,CAEIC,eAAgBuE,EAChBtE,UAAW,YACXC,YAAa,iBAInB,6BACE,cAACH,EAAD,CAEIC,eAAgBuE,EAChBtE,UAAW,WACXC,YAAa,gBAInB,6BACE,cAACH,EAAD,CAEIC,eAAgBuE,EAChBtE,UAAW,SACXC,YAAa,kBAKnB,sCACA,uCACA,yCACA,0CAGJ,gCACE,cAACyD,EAAD,CAAWnB,WAAYvB,YAI7B,cAACN,EAAD,CAAqB9B,UAAU,SAA/B,SACE,cAAC0E,EAAA,EAAD,CAAY1E,UAAU,kBAAkBc,KAAK,KAA7C,SACGyD,SC3MI,SAAS8B,EAAT,GAA4C,IAAbC,EAAY,EAAZA,SAC5C,OACE,qBAAKtG,UAAU,qBAAf,SACE,oBAAIA,UAAU,wCAAd,SAAuDsG,MCA9C,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACE,cAACH,EAAD,UACE,qCACE,cAAC,IAAD,CAAiBrG,UAAU,OAAOY,KAAM6F,MAD1C,UAEMD,QCLG,SAASE,IACtB,OACE,cAACL,EAAD,UACE,qCACE,cAAC,IAAD,CAAiBrG,UAAU,OAAOY,KAAM+F,IAAWC,MAAI,IADzD,sCCJS,SAASC,EAAT,GAAyD,IAA/BP,EAA8B,EAA9BA,SAAUQ,EAAoB,EAApBA,UAAWN,EAAS,EAATA,MAC5D,OAAIA,EAAc,cAAC,EAAD,CAAOA,MAAOA,IAC3BM,EACE,cAACJ,EAAD,IADgB,mCAAGJ,ICEb,SAASS,IACtB,MAAkClH,oBAAS,GAA3C,mBAAOiH,EAAP,KAAkBE,EAAlB,KACA,EAA0BnH,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcS,EAAd,KACA,EAAoCpH,mBAAS,IAA7C,mBAAO8D,EAAP,KAAmBuD,EAAnB,KACA,EAA8CrH,qBAA9C,mBAAOsH,EAAP,KAAwBC,EAAxB,KACA,EAAsCvH,mBAAS,IAA/C,mBAAOwH,EAAP,KAAoBC,EAApB,KACA5E,qBAAU,WAIRsE,GAAa,GACbC,EAAS,IACTM,IACGC,IAJW,qDASXC,MAAK,YAAe,IACnB,GADkB,EAAXC,MAC0B,IAAzBC,eAAR,MAAkB,GAAlB,EACA,GAAIA,EAAQvD,QAAU,EACpB,MAAMmC,MAAM,4BAGd,IAAMqB,EAAmBD,EAAQ,GAAGvC,MAAMC,KAC1C+B,EAAmBQ,GAEnBV,EAAcS,GAEdX,GAAa,MAEda,OAAM,SAACrB,GACNS,EAAST,QAEZ,IAEH9D,qBAAU,WACR,IAAMoF,EAAenE,EAAWoE,MAC9B,SAACnF,GAAD,OAAYA,EAAOwC,MAAMC,OAAS8B,KAEpCG,EAAeQ,KACd,CAACX,EAAiBxD,IAMrB,OACE,cAACvD,EAAA,EAAD,CAAWJ,UAAU,SAASK,OAAK,EAAnC,SACE,cAACwG,EAAD,CAAsBC,YAAWN,QAAjC,SACE,eAAClG,EAAA,EAAD,CAAKN,UAAU,QAAf,UACE,cAACO,EAAA,EAAD,CAAKyH,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxB,SACE,cAAC1I,EAAD,CAAaC,KAAM4H,MAErB,cAAC9G,EAAA,EAAD,CAAKP,UAAU,QAAQgI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA1C,SACE,cAACnG,EAAD,CAEIC,mBAAoB2B,EACpB1B,UAfI,SAACoD,GACjB+B,EAAmB/B,eCpDvB,IAYe8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24343e31.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, Container, Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faCalendar,\r\n  faPhone,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst DescribeText = styled.div`\r\n  font-size: medium;\r\n`;\r\n\r\nconst InfoText = styled.div`\r\n  font-weight: bold;\r\n`;\r\n\r\nexport default function UserProfile({ user }) {\r\n  const imageLocation = (user && user.picture && user.picture.large) || \"\";\r\n\r\n  const [selectedInfo, setSelectedInfo] = useState(\"mail\");\r\n\r\n  return (\r\n    <div className=\"h-100 d-flex py-5\">\r\n      <div className=\"my-auto mx-auto w-100\">\r\n        <Image\r\n          className=\"my-auto w-100 px-4\"\r\n          src={imageLocation}\r\n          alt=\"Stack Overflow logo and icons and such\"\r\n        />\r\n\r\n        <Container className=\"my-4 text-center\" fluid>\r\n          <Row className={selectedInfo === \"mail\" ? \"\" : \"d-none\"}>\r\n            <Col className=\"mb-4\">\r\n              <Row>\r\n                <Col>\r\n                  <DescribeText>My Email is</DescribeText>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InfoText>{user.email}</InfoText>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className={selectedInfo === \"bday\" ? \"\" : \"d-none\"}>\r\n            <Col className=\"mb-4\">\r\n              <Row>\r\n                <Col>\r\n                  <DescribeText>My B-day is</DescribeText>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InfoText>{user.dob.date}</InfoText>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row className={selectedInfo === \"phone\" ? \"\" : \"d-none\"}>\r\n            <Col className=\"mb-4\">\r\n              <Row>\r\n                <Col>\r\n                  <DescribeText>My number is</DescribeText>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <InfoText>{user.cell}</InfoText>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <FontAwesomeIcon\r\n                icon={faEnvelope}\r\n                size=\"lg\"\r\n                onMouseEnter={() => setSelectedInfo(\"mail\")}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <FontAwesomeIcon\r\n                icon={faCalendar}\r\n                size=\"lg\"\r\n                onMouseEnter={() => setSelectedInfo(\"bday\")}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <FontAwesomeIcon\r\n                icon={faPhone}\r\n                size=\"lg\"\r\n                onMouseEnter={() => setSelectedInfo(\"phone\")}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default function TableFilters({\r\n  fnPeopleFilter,\r\n  filterTag,\r\n  placeHolder,\r\n}) {\r\n  return (\r\n    <Form onSubmit={(e) => e.preventDefault()}>\r\n      <Form.Control\r\n        onChange={(e) => fnPeopleFilter(e, filterTag)}\r\n        placeholder={placeHolder}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Pagination, Table } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport TableFilters from \"./TableFilters\";\r\n\r\nconst PAGE_SIZE = 50;\r\nconst TableContainer = styled.div`\r\n  max-height: calc(100% - 50px);\r\n  height: 100%;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst PaginationContainer = styled.div`\r\n  height: 50px;\r\n`;\r\n\r\nexport default function UserTable({ originalPeopleList, fnSetUser }) {\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [activePeopleList, setActivePeopleList] = useState([]);\r\n  const [filterMap, setfilterMap] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setActivePeopleList([...originalPeopleList]);\r\n  }, [originalPeopleList]);\r\n\r\n  useEffect(() => {\r\n    // Filters the first name\r\n    const filterFirstName = (person, targeName) => {\r\n      const { title, first } = person.name || {};\r\n      const firstName = generateFirstName(title, first);\r\n      if (firstName.toLowerCase().includes(targeName.toLowerCase())) {\r\n        return person;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Filters the last name\r\n    const filterLastName = (person, targeName) => {\r\n      const { last } = person.name || {};\r\n      if (last.toLowerCase().includes(targeName.toLowerCase())) {\r\n        return person;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    const filterStreet = (person, targetStreet) => {\r\n      const { number, name } = person.location.street || {};\r\n      const streetName = generateStreet(number, name);\r\n      if (streetName.toLocaleLowerCase().includes(targetStreet.toLowerCase())) {\r\n        return person;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // Maps the filter name to the filter function\r\n    const filterFunctionMap = {\r\n      firstName: filterFirstName,\r\n      lastName: filterLastName,\r\n      street: filterStreet,\r\n    };\r\n\r\n    // Reset the list to original state\r\n    let peopleList = originalPeopleList;\r\n    // Apply all active filters\r\n    Object.entries(filterMap).forEach(([key, value]) => {\r\n      const fnFilter = filterFunctionMap[key];\r\n      peopleList = peopleList.filter((people) => fnFilter(people, value));\r\n    });\r\n\r\n    // Navigate the user back to page 1 because there are no remaineder pages\r\n    if (peopleList.length < PAGE_SIZE) {\r\n      fnUpdatePage(0);\r\n    }\r\n\r\n    // Update the current list\r\n    setActivePeopleList([...peopleList]);\r\n  }, [filterMap, originalPeopleList]);\r\n\r\n  const fnUpdatePage = (newIndex) => {\r\n    setPageIndex(newIndex);\r\n  };\r\n\r\n  let pageIndexes = [];\r\n  for (let i = 0; i < activePeopleList.length / PAGE_SIZE; i++) {\r\n    pageIndexes.push(\r\n      <Pagination.Item\r\n        key={i}\r\n        active={i === pageIndex}\r\n        onClick={() => fnUpdatePage(i)}\r\n      >\r\n        {i + 1}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  const calculateRowIndex = (personIndex) => {\r\n    return personIndex + pageIndex * PAGE_SIZE + 1;\r\n  };\r\n\r\n  const generateFirstName = (title, first) => {\r\n    return title ? `${title}. ${first}` : first;\r\n  };\r\n\r\n  const generateStreet = (number, name) => {\r\n    return `${number} ${name}`;\r\n  };\r\n\r\n  const TableBody = ({ peopleList }) => {\r\n    // If there are no users to display\r\n    if (peopleList.length <= 0) {\r\n      return (\r\n        <tr>\r\n          <td colSpan=\"8\">No user found</td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return peopleList\r\n      .slice(pageIndex * PAGE_SIZE, (pageIndex + 1) * PAGE_SIZE)\r\n      .map((person, index) => {\r\n        const key = person.login.uuid;\r\n        const { title, first, last } = person.name || {};\r\n        const { city, state, country, postcode } = person.location || {};\r\n        const { number, name } = person.location.street || {};\r\n        return (\r\n          <tr\r\n            key={key}\r\n            onMouseEnter={() => {\r\n              fnSetUser(key);\r\n            }}\r\n          >\r\n            <td>{calculateRowIndex(index)}</td>\r\n            <td>{generateFirstName(title, first)}</td>\r\n            <td>{last}</td>\r\n            <td>{generateStreet(number, name)}</td>\r\n            <td>{city}</td>\r\n            <td>{state}</td>\r\n            <td>{country}</td>\r\n            <td>{postcode}</td>\r\n          </tr>\r\n        );\r\n      });\r\n  };\r\n\r\n  const peopleFilter = (event, filterId) => {\r\n    event.preventDefault();\r\n\r\n    const searchTarget = event.target.value;\r\n    setfilterMap((prev) => {\r\n      return { ...prev, [filterId]: searchTarget };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <h1 className=\"display-1\">Users</h1>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>\r\n                <TableFilters\r\n                  {...{\r\n                    fnPeopleFilter: peopleFilter,\r\n                    filterTag: \"firstName\",\r\n                    placeHolder: \"First Name\",\r\n                  }}\r\n                />\r\n              </th>\r\n              <th>\r\n                <TableFilters\r\n                  {...{\r\n                    fnPeopleFilter: peopleFilter,\r\n                    filterTag: \"lastName\",\r\n                    placeHolder: \"Last Name\",\r\n                  }}\r\n                />\r\n              </th>\r\n              <th>\r\n                <TableFilters\r\n                  {...{\r\n                    fnPeopleFilter: peopleFilter,\r\n                    filterTag: \"street\",\r\n                    placeHolder: \"Street Name\",\r\n                  }}\r\n                />\r\n              </th>\r\n              {/* TODO Add filter to the reset of these */}\r\n              <th>City</th>\r\n              <th>State</th>\r\n              <th>Country</th>\r\n              <th>Zip</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <TableBody peopleList={activePeopleList} />\r\n          </tbody>\r\n        </Table>\r\n      </TableContainer>\r\n      <PaginationContainer className=\"d-flex\">\r\n        <Pagination className=\"mx-auto my-auto\" size=\"sm\">\r\n          {pageIndexes}\r\n        </Pagination>\r\n      </PaginationContainer>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LargeMessageWrapper({ children }) {\r\n  return (\r\n    <div className=\"h-100 w-100 d-flex\">\r\n      <h1 className=\"display-1 text-center my-auto mx-auto\">{children}</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport LargeMessageWrapper from \"./LargeMessageWrapper\";\r\n\r\nexport default function Error({ error }) {\r\n  return (\r\n    <LargeMessageWrapper>\r\n      <>\r\n        <FontAwesomeIcon className=\"mr-5\" icon={faExclamationTriangle} />\r\n        {`${error}`}\r\n      </>\r\n    </LargeMessageWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport LargeMessageWrapper from \"./LargeMessageWrapper\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <LargeMessageWrapper>\r\n      <>\r\n        <FontAwesomeIcon className=\"mr-5\" icon={faSpinner} spin />\r\n        Hold on, fetching some data :)\r\n      </>\r\n    </LargeMessageWrapper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\n\r\nexport default function LoadingContent({ children, isLoading, error }) {\r\n  if (error) return <Error error={error} />;\r\n  if (!isLoading) return <>{children}</>;\r\n  return <Loading />;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport UserProfile from \"./components/UserProfile\";\nimport UserTableWrapper from \"./components/UserTableWrapper\";\nimport LoadingContent from \"./components/LoadingContent\";\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [peopleList, setPeopleList] = useState([]);\n  const [focusedUserUUID, setFocusedUserUUID] = useState();\n  const [focusedUser, setFocusedUser] = useState({});\n  useEffect(() => {\n    // I will prefetch all the data to filter through it since\n    // I dont have an api end point to filter search\n    const apiRoute = `http://randomuser.me/api/?results=500&seed=foobar`;\n    setIsLoading(true);\n    setError(\"\");\n    axios\n      .get(apiRoute)\n      // Uncomment this line if you want to see api error handled\n      // .then(() => {\n      //   throw \"Testing some random error\";\n      // })\n      .then(({ data }) => {\n        const { results = [] } = data || {};\n        if (results.length <= 0) {\n          throw Error(\"Error fetching user list\");\n        }\n\n        const selectedUserUUID = results[0].login.uuid;\n        setFocusedUserUUID(selectedUserUUID);\n\n        setPeopleList(results);\n        // Comment out this line if you want to see the loading signal\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const selectedUser = peopleList.find(\n      (person) => person.login.uuid === focusedUserUUID\n    );\n    setFocusedUser(selectedUser);\n  }, [focusedUserUUID, peopleList]);\n\n  const fnSetUser = (uuid) => {\n    setFocusedUserUUID(uuid);\n  };\n\n  return (\n    <Container className=\"vh-100\" fluid>\n      <LoadingContent {...{ isLoading, error }}>\n        <Row className=\"h-100\">\n          <Col xs={12} md={4} lg={3}>\n            <UserProfile user={focusedUser} />\n          </Col>\n          <Col className=\"h-100\" xs={12} md={8} lg={9}>\n            <UserTableWrapper\n              {...{\n                originalPeopleList: peopleList,\n                fnSetUser,\n              }}\n            />\n          </Col>\n        </Row>\n      </LoadingContent>\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}